# This workflow downloads artifacts from a (by default, draft) release and runs
# a short smoke test where the application is installed and run and immediately
# shut down.
# Since we need contents-write permissions to look at draft releases, we
# actually download the artifacts in a smaller job, then upload them into the
# run and download it _again_ in the second (per-platform) job where no
# permissions are required.
name: Release smoke test
permissions: {}
on:
  workflow_dispatch:
    inputs:
      tag:
        description: >
          Download artifacts from release with this tag, rather than picking the
          first draft release.
        type: string

jobs:
  download-artifacts:
    name: Find release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to list draft releases
    env:
      RELEASE_TAG: ${{ inputs.tag }}
    outputs:
      release-tag: ${{ steps.set-release-tag.outputs.release-tag }}
    steps:
    - name: Find release
      if: inputs.tag == ''
      run: >-
        set -o xtrace;
        printf "RELEASE_TAG=%s\n" >>"$GITHUB_ENV"
        "$(gh api repos/${{ github.repository }}/releases
        --jq 'map(select(.draft))[0].tag_name')"
      env:
        GH_TOKEN: ${{ github.token }}
    - id: set-release-tag
      run: >-
        printf "release-tag=%s\n" "$RELEASE_TAG" >> "$GITHUB_OUTPUT"
    - name: Download artifacts
      run: |
        if [[ -z "$RELEASE_TAG" ]]; then
          echo "Failed to find release tag" >&2
          exit 1
        fi
        gh release download "$RELEASE_TAG" \
          --repo ${{ github.repository }} \
          --pattern '*.dmg' \
          --pattern '*.dmg.sha512sum' \
          --pattern '*.msi' \
          --pattern '*.msi.sha512sum' \
          --pattern 'rancher-desktop-linux-*.zip' \
          --pattern 'rancher-desktop-linux-*.zip.sha512sum'
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Download AppImage
      run: |
        branch=$(cut -d. -f1,2 <<< "${RELEASE_TAG#v}")
        read -r artifact_name < <(
          curl "${OBS_DOWNLOAD_URL}?jsontable" \
            | jq --raw-output ".data[].name | select(endswith(\".AppImage\")) | select(contains(\".release${branch}.\"))"
          )
        curl -L -o rancher-desktop.AppImage "${OBS_DOWNLOAD_URL}${artifact_name}"
        # The AppImage does not have a checksum; make one up.
        sha512sum rancher-desktop.AppImage > rancher-desktop.AppImage.sha512sum
        chmod a+x rancher-desktop.AppImage
      env:
        OBS_DOWNLOAD_URL: https://download.opensuse.org/download/repositories/isv:/Rancher:/dev/AppImage/

    - name: Upload macOS aarch-64 artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: application-macos-aarch64.zip
        if-no-files-found: error
        path: |
          *.aarch64.dmg
          *.aarch64.dmg.sha512sum
    - name: Upload macOS x86_64 artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: application-macos-x86_64.zip
        if-no-files-found: error
        path: |
          *.x86_64.dmg
          *.x86_64.dmg.sha512sum
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: application-win32.zip
        if-no-files-found: error
        path: |
          *.msi
          *.msi.sha512sum
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: application-linux.zip
        if-no-files-found: error
        path: |
          rancher-desktop-linux-*.zip
          rancher-desktop-linux-*.zip.sha512sum
    - name: Upload Linux AppImage
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: application-linux.AppImage
        if-no-files-found: error
        path: |
          rancher-desktop.AppImage
          rancher-desktop.AppImage.sha512sum

  smoke-test:
    name: Smoke test
    needs: download-artifacts
    strategy:
      fail-fast: false
      matrix:
        include:
        - { platform: macos-aarch64, runs-on: macos-14 }
        - { platform: macos-x86_64, runs-on: macos-13 }
        - { platform: win32, runs-on: windows-latest }
        - { platform: linux, runs-on: ubuntu-latest }
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - name: Set up environment
      uses: ./.github/actions/setup-environment

    - name: "Linux: Set startup command"
      if: runner.os == 'Linux'
      run: echo "EXEC_COMMAND=$EXEC_COMMAND" >> "$GITHUB_ENV"
      env:
        EXEC_COMMAND: >-
          exec xvfb-run --auto-servernum
          --server-args='-screen 0 1280x960x24'

    - name: Set log directory
      shell: bash
      # Use node here to do path manipulation to get correct Windows paths.
      run: >-
        node --eval='console.log("RD_LOGS_DIR=" + require("path").join(process.cwd(), "logs"));'
        >> "$GITHUB_ENV"

    - name: Download artifacts
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: application-${{ matrix.platform }}.zip
    - run: ${{ env.EXEC_COMMAND }} .github/workflows/smoke-test/smoke-test.sh
      shell: bash
    - name: Upload logs
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: logs-${{ matrix.platform }}.zip
        path: ${{ github.workspace }}/logs
        if-no-files-found: warn

  repository-smoke-test:
    name: Smoke test repository
    needs: download-artifacts
    strategy:
      fail-fast: false
      matrix:
        include:
        - { id: opensuse-tumbleweed, image: "registry.opensuse.org/opensuse/tumbleweed:latest"}
        - { id: opensuse-leap, image: "registry.opensuse.org/opensuse/leap:latest" }
        - { id: debian, image: "debian:latest" }
        - { id: fedora, image: "fedora:latest" }
        - { id: rocky, image: "rockylinux/rockylinux:latest" }
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
      options: --privileged
    steps:
    - name: Install basic tools
      if: contains(matrix.id, 'opensuse')
      run: >-
        zypper --non-interactive install
        git-core tar
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - name: Set up user
      run: |
        useradd --create-home --user-group ci-user
        export LOGS_DIR=$PWD/logs
        export RD_LOGS_DIR=$LOGS_DIR/rd
        echo "LOGS_DIR=$LOGS_DIR" >> "$GITHUB_ENV"
        echo "RD_LOGS_DIR=$RD_LOGS_DIR" >> "$GITHUB_ENV"
        mkdir -p $RD_LOGS_DIR
        chown --recursive ci-user "$LOGS_DIR"
    - uses: ./.github/actions/setup-environment
    - name: Install Rancher Desktop from package
      if: runner.os == 'Linux'
      run: .github/workflows/smoke-test/install-from-repo.sh
      env:
        RD_VERSION: ${{ needs.download-artifacts.outputs.release-tag }}
    - name: "openSUSE Workaround for #9145"
      if: contains(matrix.id, 'opensuse')
      run: >-
        zypper --non-interactive install
        qemu-img qemu-hw-display-virtio-gpu
    - name: Run smoke test
      shell: bash
      run: |
        inner_command=(
          xvfb-run
            --auto-servernum
            --server-args='-screen 0 1280x960x24'
          $PWD/.github/workflows/smoke-test/smoke-test.sh
        )
        sudo --user=ci-user --login --set-home --non-interactive \
          /usr/bin/env --chdir=$PWD \
            RD_DEBUG_ENABLED=1 RD_TEST=smoke RD_SKIP_INSTALL=true RD_LOGS_DIR=$RD_LOGS_DIR \
          script \
            --log-out $LOGS_DIR/repo-${{ matrix.id }}.log \
            --return --command "${inner_command[*]@Q}"

    - name: Take screenshot
      if: failure()
      continue-on-error: true
      shell: >-
        sudo --user=ci-user --login --set-home --non-interactive
        bash --noprofile --norc -eo pipefail {0}
      run: |
        set -o xtrace -o errexit
        PID=$(pidof smoke-test.sh || echo missing)
        if [[ ! -r /proc/$PID/environ ]]; then
          echo "Rancher Desktop is not running" >&2
          exit 0
        fi
        export $(gawk 'BEGIN { RS="\0"; FS="=" } ($1 == "DISPLAY" || $1 == "XAUTHORITY") { print }' \
          < /proc/$PID/environ)
        env
        export MAGICK_DEBUG=All # spellcheck-ignore-line
        gm import -window root -verbose $LOGS_DIR/screenshot-${{ matrix.id }}.png

    - name: Upload logs
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: logs-repo-${{ matrix.id }}.zip
        path: ${{ github.workspace }}/logs
        if-no-files-found: warn

  appimage-smoke-test:
    name: Smoke test AppImage
    needs: download-artifacts
    strategy:
      fail-fast: false
      matrix:
        include:
        - { id: opensuse, image: "registry.opensuse.org/opensuse/tumbleweed:latest" }
        - { id: rocky, image: "rockylinux/rockylinux:9" }
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
      options: --privileged
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - name: Set up user
      run: |
        useradd --create-home --user-group ci-user
        export LOGS_DIR=$PWD/logs
        export RD_LOGS_DIR=$LOGS_DIR/rd
        echo "LOGS_DIR=$LOGS_DIR" >> "$GITHUB_ENV"
        echo "RD_LOGS_DIR=$RD_LOGS_DIR" >> "$GITHUB_ENV"
        mkdir -p $RD_LOGS_DIR
        chown --recursive ci-user "$LOGS_DIR"
    - uses: ./.github/actions/setup-environment
      with:
        user: ci-user

    - name: Download AppImage
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: application-linux.AppImage

    - name: Run smoke test
      run: |
        inner_command=(
          xvfb-run
            --auto-servernum
            --server-args='-screen 0 1280x960x24'
          $PWD/.github/workflows/smoke-test/smoke-test.sh
        )
        sudo --user=ci-user --login --set-home --non-interactive \
          /usr/bin/env --chdir=$PWD \
            RD_DEBUG_ENABLED=1 RD_TEST=smoke RD_LOGS_DIR=$RD_LOGS_DIR \
          script \
            --log-out $LOGS_DIR/appimage-${{ matrix.id }}.log \
            --return --command "${inner_command[*]@Q}" \

    - name: Take screenshot
      if: failure()
      continue-on-error: true
      shell: >-
        sudo --user=ci-user --login --set-home --non-interactive
        bash --noprofile --norc -eo pipefail {0}
      run: |
        set -o xtrace -o errexit
        PID=$(pidof rancher-desktop.AppImage || echo missing)
        if [[ ! -r /proc/$PID/environ ]]; then
          echo "Rancher Desktop is not running" >&2
          exit 0
        fi
        export $(gawk 'BEGIN { RS="\0"; FS="=" } ($1 == "DISPLAY" || $1 == "XAUTHORITY") { print }' \
          < /proc/$PID/environ)
        env
        export MAGICK_DEBUG=All # spellcheck-ignore-line
        gm import -window root -verbose $LOGS_DIR/screenshot-${{ matrix.id }}.png

    - name: Upload logs
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: logs-appimage-${{ matrix.id }}.zip
        path: ${{ github.workspace }}/logs
        if-no-files-found: warn
