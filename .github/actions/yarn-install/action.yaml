name: Yarn Install
description: >-
  This is a composite action that does everything needed to do `yarn install`.

runs:
  using: composite
  steps:
  # In case we're running on a self-hosted runner without `yarn` installed,
  # set up NodeJS, enable `yarn`, and then handle the caching.
  - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
    with:
      node-version-file: package.json
  - run: corepack enable yarn
    shell: bash
  - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
    with:
      node-version-file: package.json
      cache: yarn

  - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
    with:
      go-version-file: go.work
      cache-dependency-path: src/go/**/go.sum

  - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
    with:
      python-version: '3.x'
      cache: pip
  - run: pip install setuptools
    shell: bash

  - name: Install Windows dependencies
    if: runner.os == 'Windows'
    shell: powershell
    run: .\scripts\windows-setup.ps1 -SkipVisualStudio -SkipTools

  - name: Flag build for M1
    if: runner.os == 'macOS' && runner.arch == 'ARM64'
    run: echo "M1=1" >> "${GITHUB_ENV}"
    shell: bash

  - run: yarn install --immutable
    shell: bash

  - name: Fix electron sandbox
    if: runner.os == 'Linux'
    shell: bash
    run: |
      sudo chown root node_modules/electron/dist/chrome-sandbox
      sudo chmod 04755 node_modules/electron/dist/chrome-sandbox
